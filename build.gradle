plugins {
    id 'war'
    id 'java'
    id 'application'
    id "io.freefair.aspectj.post-compile-weaving" version "6.4.1"
}
war {
    enabled = true
}
group = 'org.example'
version = '1.0-SNAPSHOT'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}
mainClassName = "org.example.Main"

var runMigrationTool = tasks.register('runMigrationTool', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.example.infrastructure.migration.MigrationTool'
}

var dockerComposeUp = tasks.register('dockerComposeUp', Exec) {
    description = "Start docker compose"
    commandLine 'docker-compose', 'up', '-d'
}

var dockerComposeDown = tasks.register('dockerComposeDown', Exec) {
    description = "Stop docker compose"
    commandLine 'docker-compose', 'down'
}

run {
    standardInput = System.in
    dependsOn runMigrationTool
    dependsOn dockerComposeUp
    finalizedBy dockerComposeDown
}

dependencies {
    implementation 'org.postgresql:postgresql:42.7.3'
    implementation 'org.liquibase:liquibase-core:4.29.2'
    implementation 'org.slf4j:slf4j-log4j12:2.0.13'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.2'
    implementation 'org.aspectj:aspectjrt:1.9.20.1'
    implementation 'org.aspectj:aspectjweaver:1.9.8'
    implementation 'org.mapstruct:mapstruct:1.6.2'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.2'

    providedCompile 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core:3.17.0'
    testImplementation 'org.mockito:mockito-core:5.14.1'
    testImplementation 'org.testcontainers:postgresql:1.20.0'
}

test {
    useJUnitPlatform()
}

