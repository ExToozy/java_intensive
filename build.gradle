plugins {
    id 'java'
    id 'application'
}

group = 'org.example'
version = '1.0-SNAPSHOT'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}
mainClassName = "org.example.Main"

var runMigrationTool = tasks.register('runMigrationTool', JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.example.infrastructure.migration.MigrationTool'
}

var dockerComposeUp = tasks.register('dockerComposeUp', Exec) {
    description = "Start docker compose"
    commandLine 'docker-compose', 'up', '-d'
}

var dockerComposeDown = tasks.register('dockerComposeDown', Exec) {
    description = "Stop docker compose"
    commandLine 'docker-compose', 'down'
}

run {
    standardInput = System.in
    dependsOn runMigrationTool
    dependsOn dockerComposeUp
    finalizedBy dockerComposeDown
}

dependencies {
    implementation 'org.postgresql:postgresql:42.7.3'
    implementation 'org.liquibase:liquibase-core:4.29.2'
    implementation 'org.slf4j:slf4j-log4j12:2.0.13'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core:3.17.0'
    testImplementation 'org.mockito:mockito-core:5.14.1'
    testImplementation 'org.testcontainers:postgresql:1.20.0'
}

test {
    useJUnitPlatform()
}

